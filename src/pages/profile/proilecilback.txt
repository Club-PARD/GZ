// pages/profile.tsx
import React, { useState, useEffect } from 'react';
import axios from 'axios';
import InfoSection from './profile/InfoSection';
// (다른 import 생략)

export default function ProfilePage() {
    //상태들을 선언하고 초기화해줌
  // InfoSection에 넘겨줄 상태들
  const [nickname, setNickname] = useState('');
  const [schoolName, setSchoolName] = useState('');
  const [studentMail, setStudentMail] = useState('');
  // 비밀번호 변경용 상태들
  const [currentPw, setCurrentPw] = useState('');
  const [newPw, setNewPw]         = useState('');
  const [confirmPw, setConfirmPw] = useState('');
  const isValid = /* 비밀번호 유효성 검사 로직 */;

//useeffect를 통하여 프로필을 조회함(get user info)
  useEffect(() => {
    // 마운트 시 프로필 조회
    axios
      .get('/user/info')                   // Swagger에서 본 엔드포인트
      //-> try catch 아닌감?
      .then(res => { 
        // 성공 시 res.data 형태 확인
        // 예시 response:
        // { status:0, success:true, message:"", data:{ nickname:"", schoolName:"", studentMail:"" } }
        if (res.data.success) {
          const { nickname, schoolName, studentMail } = res.data.data;
          setNickname(nickname);
          setSchoolName(schoolName);
          setStudentMail(studentMail);
        } else {
          console.warn('프로필 조회 실패:', res.data.message);
        }
      })
      .catch(err => {//못받아왔을때 
        console.error('API 호출 에러:', err);
      });
  }, []);

  return (
    <>
      {/* ...헤더/사이드바... */}
      {activeTab === 'info' && (
        <InfoSection
          nickname={nickname}
          setNickname={setNickname}
          currentPw={currentPw}
          setCurrentPw={setCurrentPw}
          newPw={newPw}
          setNewPw={setNewPw}
          confirmPw={confirmPw}
          setConfirmPw={setConfirmPw}
          isValid={isValid}
        />
      )}
      {/* ...다른 탭들... */}
    </>
  );
}
